name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  setup-infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      REPO_NAME: ${{ github.event.repository.name }}
      BRANCH_NAME: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v4
    - name: Set AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ap-southeast-2
        role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/gh_deploy_role_${{ github.event.repository.name }}
    - uses: hashicorp/setup-terraform@v3
    - run: |
        cd infra
        terraform init -backend-config="bucket=terraform-state-$AWS_ACCOUNT_ID" -backend-config="key=$REPO_NAME/$BRANCH_NAME" -backend-config="dynamodb_table=terraform-state-$AWS_ACCOUNT_ID"
        terraform apply --auto-approve

  build-and-deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Set AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ap-southeast-2
        role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/gh_deploy_role_${{ github.event.repository.name }}
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - run: npm install
    - run: npm run build
    - name: Deploy to S3
      run: |
        aws s3 sync build/ s3://${{github.event.repository.name}}-static-${{secrets.AWS_ACCOUNT_ID}} --delete